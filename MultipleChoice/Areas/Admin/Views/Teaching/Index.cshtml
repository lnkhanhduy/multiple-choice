@{
    ViewData["Title"] = "Giảng dạy";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-sm-3 mb-2">
        <button class="btn btn-success" id="btnAdd">
            <i class="fa-solid fa-plus"></i>
            Thêm quá tình giảng dạy
        </button>
    </div>

    <div class="col-sm-3 offset-sm-6 mb-2">
        <form id="formSearch">
            <div class="input-group">
                <input type="search" id="search" class="form-control" placeholder="Tìm kiếm" />
                <div class="input-group-btn">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<nav aria-label="..." class="mt-2">
    <ul class="pagination pagination-sm" id="pagination">
    </ul>
</nav>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    Tên giáo viên
                </th>
                <th>
                    Môn học
                </th>
                <th>
                    Lớp
                </th>
                <th>
                    Từ ngày
                </th>
                <th>
                    Đến ngày
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody id="tBodyListTeaching">
        </tbody>
    </table>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="modalTeaching">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="card">
                <h5 class="card-header" id="modalTitle"></h5>
                <div class="card-body">
                    <input hidden id="teachingId" value="" />
                    <div class="form-group">
                        <label class="control-label">Môn học</label>
                        <select class="form-select" id="subjectId">
                            <option value='-1' selected>Chọn môn học</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Giáo viên</label>
                        <select class="form-select" id="teacherId">
                            <option value='-1' selected>Chọn giáo viên</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Lớp</label>
                        <select class="form-select" id="classId">
                            <option value='-1' selected>Chọn lớp</option>
                        </select>
                    </div>
                    <div class="row mt-2">
                        <div class="form-group col-sm-6">
                            <label class="control-label">Từ ngày</label>
                            <input type="date" class="form-control" id="startingDate" />
                        </div>
                        <div class="form-group col-sm-6">
                            <label class="control-label">Đến ngày</label>
                            <input type="date" class="form-control" id="endingDate" />
                        </div>
                    </div>
                </div>
                <div class="card-footer text-end">
                    <button type="button" class="btn btn-success" id="btnSubmit">Thêm</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        let keyword = '';
        let page = 1;

        $(document).ready(function () {
            LoadListSubject();
            LoadListClass();
            LoadListTeaching(keyword, page);
        });

        //Load list teacher when subject change
        $('#subjectId').on('change', function () {
            if ($('#subjectId').val() == -1) {
                $('#teacherId').empty();
                $('#teacherId').append("<option value='-1'>Chọn giáo viên</option>")
            }
            else {

                LoadListTeacher($('#subjectId').val());
            }
        })

        //Load list teaching
        function LoadListTeaching(keyword, page) {
            $.ajax({
                url: "/admin/teaching/GetListTeaching",
                type: "get",
                data: {
                    keyword,
                    page
                },
                success: function (data) {
                    if (data.code === 200) {
                        $('#tBodyListTeaching').empty();
                        $.each(data.data, function (index, item) {
                            let tr = `<tr id=${item.id}>`;
                            tr += `<td class="col-sm-2">${item.teacherName}</td>`;
                            tr += `<td class="col-sm-2">${item.subjectName}</td>`;
                            tr += `<td class="col-sm-2">${item.className}</td>`;
                            tr += '<td class="col-sm-2">' + new Date(item.startingDate).getDate()
                                + "/" + Number(new Date(item.startingDate).getMonth() + 1)
                                + "/" + new Date(item.startingDate).getFullYear() + "</td>";
                            tr += '<td class="col-sm-2">' + new Date(item.endingDate).getDate()
                                + "/" + Number(new Date(item.endingDate).getMonth() + 1)
                                + "/" + new Date(item.endingDate).getFullYear() + "</td>";
                            tr += '<td class="col-sm-2 text-end">';
                            tr += '<button class="btn btn-warning btn-sm" name="update"><i class="fa-solid fa-pen-to-square"></i></button> | ';
                            tr += '<button class="btn btn-danger btn-sm" name="delete"><i class="fa-solid fa-trash-can"></i></button>';
                            tr += "</td>";
                            tr += "</tr>";

                            $('#tBodyListTeaching').append(tr);

                        })

                        if (data.pageSize > 1) {
                            $('#pagination').empty();
                            for (var i = 1; i <= data.pageSize; i++) {
                                let li = `<li class="page-item" id=${i}><a class="page-link" href="#">${i}</a></li>`;
                                $('#pagination').append(li);
                            }
                            let li = $(`#pagination li#${page}`);
                            $(li).addClass('active');
                        }
                        else {
                            $('#pagination').empty();
                        }
                    }
                }
            })
        };

        //Load list teacher
        function LoadListTeacher(subjectId) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: "/admin/teaching/GetListTeacher",
                    type: "get",
                    data: {
                        subjectId,
                    },
                    success: function (data) {
                        if (data.code === 200) {
                            $('#teacherId').empty();
                            $('#teacherId').append("<option value='-1' selected>Chọn giáo viên</option>");
                            $.each(data.data, function (index, item) {
                                let option = `<option value=${item.id}>${item.teacherName}</option>`;
                                $('#teacherId').append(option);
                            });
                            resolve(); // Hoàn thành Promise khi danh sách giáo viên được tải và gán thành công
                        } else {
                            reject("Lỗi"); // Từ chối Promise nếu có lỗi trong quá trình tải danh sách
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        reject("AJAX error: " + textStatus); // Từ chối Promise nếu xảy ra lỗi AJAX
                    }
                });
            });
        }

        //Load list class
        function LoadListClass() {
            $.ajax({
                url: "/admin/teaching/GetListClass",
                type: "get",
                success: function (data) {
                    if (data.code === 200) {
                        $('#classId').empty();
                        $('#classId').append("<option value='-1' selected>Chọn lớp</option>");
                        $.each(data.data, function (index, item) {
                            let option = `<option value=${item.id}>${item.className}</option>`;
                            $('#classId').append(option);
                        })
                    }
                }
            })
        };

        //Load list subject
        function LoadListSubject() {
            $.ajax({
                url: "/admin/teaching/GetListSubject",
                type: "get",
                success: function (data) {
                    if (data.code === 200) {
                        $('#subjectId').empty();
                        $('#subjectId').append("<option value='-1' selected>Chọn môn học</option>");
                        $.each(data.data, function (index, item) {
                            let option = `<option value=${item.id}>${item.subjectName}</option>`;
                            $('#subjectId').append(option);
                        })
                    }
                }
            })
        };

        //Show modal add Teaching
        $('#btnAdd').click(function () {
            $('#modalTitle').text("Thêm quá trình giảng dạy");

            $('#teachingId').val('');
            $('#teacherId').val(-1);
            $('#subjectId').val(-1);
            $('#classId').val(-1);
            $('#startingDate').val('');
            $('#endingDate').val('');

            $('#btnSubmit').text('Thêm');
            $('#btnSubmit').show();

            $('#modalTeaching').modal('show');
        });

        //Show modal update teaching
        $(document).on('click', "button[name='update']", function () {
            let teachingId = $(this).closest('tr').attr('id');

            $.ajax({
                url: "/admin/teaching/GetDetailTeaching",
                type: "get",
                data: {
                    id: teachingId
                },
                success: function (data) {
                    if (data.code === 200) {
                        console.log(data)
                        $('#modalTitle').text("Cập nhật thông tin quá trình giảng dạy");

                        $('#teachingId').val(teachingId);
                        $('#subjectId').val(data.data.idSubject);
                        LoadListTeacher(data.data.idSubject).then(function () {
                            $('#teacherId').val(data.data.idTeacher);
                        });
                        $('#teacherId').val(data.data.idTeacher);
                        $('#classId').val(data.data.idClass);
                        $('#startingDate').val(FormatDate(data.data.startingDate));
                        $('#endingDate').val(FormatDate(data.data.endingDate));

                        $('#btnSubmit').text('Lưu');
                        $('#btnSubmit').show();

                        $('#modalTeaching').modal('show');
                    }
                    else {
                        alert(data.message);
                    }
                }
            })
        });

        //Delete teaching
        $(document).on('click', "button[name='delete']", function () {
            let teachingId = $(this).closest('tr').attr('id');

            if (confirm("Bạn có chắc muốn xóa quá trình giảng dạy này?")) {
                $.ajax({
                    url: '/admin/teaching/DeleteTeaching',
                    type: "post",
                    data: {
                        id: teachingId
                    },
                    success: function (data) {
                        if (data.code == 200) {
                            alert(data.message);

                            page = 1;
                            LoadListTeaching(keyword, page);
                        } else {
                            alert(data.message);
                        }
                    }
                })
            }
        });

        //Submit modal
        $('#btnSubmit').click(function () {
            let teachingId = $('#teachingId').val();
            let teacherId = $('#teacherId').val();
            let subjectId = $('#subjectId').val();
            let classId = $('#classId').val();
            let startingDate = $('#startingDate').val();
            let endingDate = $('#endingDate').val();

            if (teacherId == -1 || subjectId == -1 || classId == -1 || startingDate.length == 0 || endingDate.length == 0) {
                alert("Vui lòng nhập đầy đủ dữ liệu!");
                return;
            }
            else if (new Date(startingDate) >= new Date(endingDate)) {
                alert("Thời gian gảng dạy không hợp lệ!");
                return;
            }

            if (teachingId.length == 0) { //Add teaching
                $.ajax({
                    url: '/admin/teaching/AddTeaching',
                    type: 'post',
                    data: {
                        teacherId,
                        subjectId,
                        classId,
                        startingDate,
                        endingDate
                    },
                    success: function (data) {
                        if (data.code == 200) {
                            alert(data.message);

                            $('#startingDate').val('');
                            $('#endingDate').val('');
                            $('#subjectId').val(-1);
                            $('#teacherId').val(-1);
                            $('#classId').val(-1);

                            LoadListTeaching(keyword, page);
                        }
                        else {
                            alert(data.message);
                        }
                    }
                })
            }
            else { //Update teaching
                $.ajax({
                    url: '/admin/teaching/UpdateTeaching',
                    type: 'post',
                    data: {
                        id: teachingId,
                        teacherId,
                        subjectId,
                        classId,
                        startingDate,
                        endingDate
                    },
                    success: function (data) {
                        if (data.code == 200) {
                            alert(data.message);

                            $('#modalTeaching').modal('hide');

                            page = 1;
                            LoadListTeaching(keyword, page);
                        }
                        else {
                            alert(data.message);
                        }
                    }
                })
            }
        })

        //Search
        $('#formSearch').submit(function (e) {
            e.preventDefault();
            keyword = $('#search').val().trim();

            if (keyword.length == 0) {
                alert("Vui lòng nhập từ khóa tìm kiếm!");
                return;
            }

            page = 1;
            LoadListTeaching(keyword, page)
        })

        //Reload list teaching when search null
        $('#search').keyup(function () {
            if ($("#search").val().length == 0) {
                keyword = '';
                page = 1;
                LoadListTeaching(keyword, page);
            }
        })

        //Click page of pagination
        $('#pagination').on('click', 'li', function (e) {
            e.preventDefault();
            page = $(this).text();
            LoadListTeaching(keyword, page);
        })

        //Format date
        function FormatDate(date) {
            var newDate = new Date(date);
            var formattedDate = newDate.getFullYear() + "-" + String(newDate.getMonth() + 1).padStart(2, "0") + "-" + String(newDate.getDate()).padStart(2, "0");

            return formattedDate;
        }
    </script>
}

